{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rutik\\\\Desktop\\\\TaskManager_App\\\\taskmanger_app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport TaskPage from \"./TaskPage\";\nimport AboutPage from \"./AboutPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]); // stores all tasks\n  const [newTask, setNewTask] = useState(''); // stores input value\n  const [editIndex, setEditIndex] = useState(null); // stores index of task being edited\n\n  // This function handles both adding and updating tasks\n  function addTask() {\n    if (newTask.trim() === '') return; // Don't add empty tasks\n\n    if (editIndex !== null) {\n      const updatedTasks = [...tasks];\n      updatedTasks[editIndex] = newTask; // replace the task\n      setTasks(updatedTasks);\n      setEditIndex(null); // reset edit mode\n    } else {\n      // Adding a new task\n      setTasks([...tasks, newTask]);\n    }\n    setNewTask(\"\"); // clear input after add/update\n  }\n\n  // Delete task at given index\n  function deleteTask(index) {\n    setTasks(tasks.filter((task, i) => i !== index));\n  }\n\n  // Set task to input and switch to edit mode\n  function editTask(index) {\n    setNewTask(tasks[index]); // show selected task in input box\n    setEditIndex(index); // set edit mode\n  }\n  function toggleComplete(index) {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].completed = !updatedTasks[index].completed;\n    setTasks(updatedTasks);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Task Manager App \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Task\",\n          value: newTask,\n          onChange: e => setNewTask(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addTask,\n          children: [editIndex !== null ? \"Update Task\" : \"Add Task\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: tasks.map((task, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              textDecoration: task.completed ? 'line-through' : 'none'\n            },\n            children: task.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => toggleComplete(i),\n            children: [\" \", task.completed ? \"Undo\" : \"Complete\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => editTask(i),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteTask(i),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GMdTg1OLBFL8f03nDKx8aQZ/Yr4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","Routes","Route","Link","TaskPage","AboutPage","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","useState","newTask","setNewTask","editIndex","setEditIndex","addTask","trim","updatedTasks","deleteTask","index","filter","task","i","editTask","toggleComplete","completed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","style","textDecoration","text","_c","$RefreshReg$"],"sources":["C:/Users/rutik/Desktop/TaskManager_App/taskmanger_app/src/App.js"],"sourcesContent":["import { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport TaskPage from \"./TaskPage\";\nimport AboutPage from \"./AboutPage\";\n\nfunction App() {\n\n  const [tasks, setTasks] = useState([]);        // stores all tasks\n  const [newTask, setNewTask] = useState('');    // stores input value\n  const [editIndex, setEditIndex] = useState(null); // stores index of task being edited\n\n  \n  // This function handles both adding and updating tasks\n  function addTask() {\n\n    if (newTask.trim() === '') return; // Don't add empty tasks\n\n    if (editIndex !== null) {\n      const updatedTasks = [...tasks];\n      updatedTasks[editIndex] = newTask; // replace the task\n      setTasks(updatedTasks);\n      setEditIndex(null); // reset edit mode\n    } \n    else {                          // Adding a new task\n      setTasks([...tasks, newTask]);\n    }\n\n    setNewTask(\"\");      // clear input after add/update\n  }\n\n  // Delete task at given index\n  function deleteTask(index) {\n    setTasks(tasks.filter((task, i) => i !== index));\n  }\n\n  // Set task to input and switch to edit mode\n  function editTask(index) {\n    setNewTask(tasks[index]);   // show selected task in input box\n    setEditIndex(index);        // set edit mode\n  }\n\n  function toggleComplete(index) {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].completed = !updatedTasks[index].completed;\n    setTasks(updatedTasks);\n  }\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1> Task Manager App </h1>\n\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Enter Task\"\n            value={newTask}\n            onChange={(e) => setNewTask(e.target.value)}\n          />\n\n          <button onClick={addTask}>\n            {editIndex !== null ? \"Update Task\" : \"Add Task\"} {/* change button text */}\n          </button>\n        </div>\n\n        <div>\n        {tasks.map((task, i) => (\n          <div key={i}>\n            <li style={{ textDecoration: task.completed ? 'line-through' : 'none' }}>\n              {task.text}\n            </li>\n            <button onClick={() => toggleComplete(i)}> {task.completed ? \"Undo\" : \"Complete\"}</button>\n            <button onClick={() => editTask(i)}>Edit</button>\n            <button onClick={() => deleteTask(i)}>Delete</button>\n          </div>\n        ))}\n\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}