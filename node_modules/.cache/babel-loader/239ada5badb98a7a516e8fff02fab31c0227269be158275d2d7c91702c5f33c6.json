{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rutik\\\\Desktop\\\\TaskManager_App\\\\taskmanger_app\\\\src\\\\pages\\\\TaskPage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskPage() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState(\"\");\n  const [editIndex, setEditIndex] = useState(null);\n  const apiURL = \"http://localhost:5000/tasks\";\n  useEffect(() => {\n    fetch(apiURL).then(res => res.json()).then(data => setTasks(data));\n  }, []);\n  const handleAddOrUpdate = () => {\n    if (newTask.trim() === \"\") return;\n    const taskObject = {\n      text: newTask,\n      completed: false\n    };\n    if (editIndex !== null) {\n      // Edit mode\n      const updatedTasks = [...tasks];\n      updatedTasks[editIndex].text = newTask;\n      setTasks(updatedTasks);\n      fetch(`${apiURL}/${editIndex}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(updatedTasks[editIndex])\n      });\n      setEditIndex(null);\n    } else {\n      // Add mode\n      fetch(apiURL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(taskObject)\n      }).then(() => setTasks([...tasks, taskObject]));\n    }\n    setNewTask(\"\");\n  };\n  const handleDelete = index => {\n    fetch(`${apiURL}/${index}`, {\n      method: \"DELETE\"\n    }).then(() => {\n      const updated = tasks.filter((_, i) => i !== index);\n      setTasks(updated);\n    });\n  };\n  const handleEdit = index => {\n    setNewTask(tasks[index].text);\n    setEditIndex(index);\n  };\n  const toggleComplete = index => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].completed = !updatedTasks[index].completed;\n    setTasks(updatedTasks);\n    fetch(`${apiURL}/${index}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(updatedTasks[index])\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Task\",\n        value: newTask,\n        onChange: e => setNewTask(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddOrUpdate,\n        children: editIndex !== null ? \"Update Task\" : \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map((task, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            textDecoration: task.completed ? \"line-through\" : \"none\"\n          },\n          children: task.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleComplete(i),\n          children: task.completed ? \"Undo\" : \"Complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(i),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(i),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskPage, \"ftnhnbsT7jrG+9Vz7SjP/eWmsas=\");\n_c = TaskPage;\nexport default TaskPage;\nvar _c;\n$RefreshReg$(_c, \"TaskPage\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","TaskPage","_s","tasks","setTasks","newTask","setNewTask","editIndex","setEditIndex","apiURL","fetch","then","res","json","data","handleAddOrUpdate","trim","taskObject","text","completed","updatedTasks","method","headers","body","JSON","stringify","handleDelete","index","updated","filter","_","i","handleEdit","toggleComplete","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","task","style","textDecoration","_c","$RefreshReg$"],"sources":["C:/Users/rutik/Desktop/TaskManager_App/taskmanger_app/src/pages/TaskPage.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nfunction TaskPage() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [newTask, setNewTask] = useState(\"\");\r\n  const [editIndex, setEditIndex] = useState(null);\r\n\r\n  const apiURL = \"http://localhost:5000/tasks\";\r\n\r\n  useEffect(() => {\r\n    fetch(apiURL)\r\n      .then((res) => res.json())\r\n      .then((data) => setTasks(data));\r\n  }, []);\r\n\r\n  const handleAddOrUpdate = () => {\r\n    if (newTask.trim() === \"\") return;\r\n\r\n    const taskObject = { text: newTask, completed: false };\r\n\r\n    if (editIndex !== null) {\r\n      // Edit mode\r\n      const updatedTasks = [...tasks];\r\n      updatedTasks[editIndex].text = newTask;\r\n      setTasks(updatedTasks);\r\n\r\n      fetch(`${apiURL}/${editIndex}`, {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(updatedTasks[editIndex]),\r\n      });\r\n\r\n      setEditIndex(null);\r\n    } else {\r\n      // Add mode\r\n      fetch(apiURL, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(taskObject),\r\n      })\r\n        .then(() => setTasks([...tasks, taskObject]));\r\n    }\r\n\r\n    setNewTask(\"\");\r\n  };\r\n\r\n  const handleDelete = (index) => {\r\n    fetch(`${apiURL}/${index}`, { method: \"DELETE\" }).then(() => {\r\n      const updated = tasks.filter((_, i) => i !== index);\r\n      setTasks(updated);\r\n    });\r\n  };\r\n\r\n  const handleEdit = (index) => {\r\n    setNewTask(tasks[index].text);\r\n    setEditIndex(index);\r\n  };\r\n\r\n  const toggleComplete = (index) => {\r\n    const updatedTasks = [...tasks];\r\n    updatedTasks[index].completed = !updatedTasks[index].completed;\r\n    setTasks(updatedTasks);\r\n\r\n    fetch(`${apiURL}/${index}`, {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(updatedTasks[index]),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter Task\"\r\n          value={newTask}\r\n          onChange={(e) => setNewTask(e.target.value)}\r\n        />\r\n        <button onClick={handleAddOrUpdate}>\r\n          {editIndex !== null ? \"Update Task\" : \"Add Task\"}\r\n        </button>\r\n      </div>\r\n\r\n      <ul>\r\n        {tasks.map((task, i) => (\r\n          <li key={i}>\r\n            <span style={{ textDecoration: task.completed ? \"line-through\" : \"none\" }}>\r\n              {task.text}\r\n            </span>\r\n            <button onClick={() => toggleComplete(i)}>\r\n              {task.completed ? \"Undo\" : \"Complete\"}\r\n            </button>\r\n            <button onClick={() => handleEdit(i)}>Edit</button>\r\n            <button onClick={() => handleDelete(i)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}